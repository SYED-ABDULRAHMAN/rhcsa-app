{
  "module_id": "module1",
  "module_name": "User Management",
  "description": "Learn to create and manage users, groups, and their properties",
  "questions": [
    {
      "question_id": "Q1",
      "title": "Create Basic User Account",
      "category": "User Management",
      "difficulty": "easy",
      "difficulty_stars": "⭐",
      "points": 15,
      "time_limit": 600,
      "description": "You are a system administrator and need to create a new user account for a developer joining your team.",
      "requirements": [
        {
          "id": "username",
          "text": "Username: john_dev",
          "check_key": "username"
        },
        {
          "id": "uid",
          "text": "User ID (UID): 2500",
          "check_key": "uid"
        },
        {
          "id": "home",
          "text": "Home Directory: /home/john_dev",
          "check_key": "home_dir"
        },
        {
          "id": "shell",
          "text": "Shell: /bin/bash",
          "check_key": "shell"
        },
        {
          "id": "comment",
          "text": "Comment: Developer Account",
          "check_key": "comment"
        },
        {
          "id": "group",
          "text": "Primary Group: developers (GID: 3000)",
          "check_key": "primary_group"
        }
      ],
      "hints": [
        "Always create the group before creating the user",
        "Use 'groupadd -g GID groupname' to create a group with specific GID",
        "Use 'useradd' command with appropriate flags: -u, -g, -d, -s, -c",
        "Verify your work with 'id username' and 'getent passwd username'"
      ],
      "solution_steps": [
        "sudo groupadd -g 3000 developers",
        "sudo useradd -u 2500 -g developers -d /home/john_dev -s /bin/bash -c \"Developer Account\" john_dev",
        "id john_dev",
        "getent passwd john_dev"
      ],
      "validation_script": "validate_q1.sh",
      "cleanup_script": "userdel -r john_dev 2>/dev/null; groupdel developers 2>/dev/null; true",
      "order": 1
    },
    {
      "question_id": "Q2",
      "title": "Create User with Multiple Groups",
      "category": "User Management",
      "difficulty": "medium",
      "difficulty_stars": "⭐⭐",
      "points": 20,
      "time_limit": 900,
      "description": "Create a user account that belongs to multiple groups for a system administrator who needs access to various services.",
      "requirements": [
        {
          "id": "username",
          "text": "Username: admin_user",
          "check_key": "username"
        },
        {
          "id": "uid",
          "text": "User ID (UID): 3000",
          "check_key": "uid"
        },
        {
          "id": "primaryGroup",
          "text": "Primary Group: sysadmin (GID: 4000)",
          "check_key": "primary_group"
        },
        {
          "id": "secondaryGroups",
          "text": "Secondary Groups: wheel, docker",
          "check_key": "secondary_groups"
        },
        {
          "id": "home",
          "text": "Home Directory: /home/admin_user",
          "check_key": "home_dir"
        },
        {
          "id": "shell",
          "text": "Shell: /bin/bash",
          "check_key": "shell"
        }
      ],
      "hints": [
        "Create all groups first (primary and secondary)",
        "Use -G flag for secondary groups (comma-separated, no spaces)",
        "The 'wheel' and 'docker' groups might already exist on your system",
        "Use 'groups username' to verify group membership"
      ],
      "solution_steps": [
        "sudo groupadd -g 4000 sysadmin",
        "sudo groupadd wheel 2>/dev/null || true",
        "sudo groupadd docker 2>/dev/null || true",
        "sudo useradd -u 3000 -g sysadmin -G wheel,docker -d /home/admin_user -s /bin/bash admin_user",
        "id admin_user",
        "groups admin_user"
      ],
      "validation_script": "validate_q2.sh",
      "cleanup_script": "userdel -r admin_user 2>/dev/null; groupdel sysadmin 2>/dev/null; true",
      "order": 2
    },
    {
      "question_id": "Q3",
      "title": "Create System Service Account",
      "category": "User Management",
      "difficulty": "medium",
      "difficulty_stars": "⭐⭐",
      "points": 20,
      "time_limit": 900,
      "description": "Create a system account for running a web service. System accounts are used by services and daemons, not for interactive login.",
      "requirements": [
        {
          "id": "username",
          "text": "Username: webapp",
          "check_key": "username"
        },
        {
          "id": "uid",
          "text": "UID: Below 1000 (system account range)",
          "check_key": "uid_range"
        },
        {
          "id": "home",
          "text": "Home Directory: /var/www/webapp",
          "check_key": "home_dir"
        },
        {
          "id": "shell",
          "text": "Shell: /sbin/nologin (no login)",
          "check_key": "shell"
        },
        {
          "id": "system",
          "text": "System account flag used",
          "check_key": "is_system"
        }
      ],
      "hints": [
        "Use the -r flag to create a system account",
        "System accounts automatically get UIDs below 1000",
        "/sbin/nologin prevents interactive login",
        "You may need to create the /var/www directory first"
      ],
      "solution_steps": [
        "sudo mkdir -p /var/www",
        "sudo useradd -r -d /var/www/webapp -s /sbin/nologin webapp",
        "id webapp",
        "getent passwd webapp"
      ],
      "validation_script": "validate_q3.sh",
      "cleanup_script": "userdel -r webapp 2>/dev/null; true",
      "order": 3
    },
    {
      "question_id": "Q4",
      "title": "Modify Existing User Properties",
      "category": "User Management",
      "difficulty": "hard",
      "difficulty_stars": "⭐⭐⭐",
      "points": 25,
      "time_limit": 1200,
      "description": "You need to modify an existing user's properties. First create the user, then modify it according to the new requirements.",
      "requirements": [
        {
          "id": "username",
          "text": "Username: testuser",
          "check_key": "username"
        },
        {
          "id": "newShell",
          "text": "Modified Shell: /bin/zsh",
          "check_key": "shell"
        },
        {
          "id": "newHome",
          "text": "Modified Home: /opt/testuser",
          "check_key": "home_dir"
        },
        {
          "id": "newComment",
          "text": "Modified Comment: Modified Test User",
          "check_key": "comment"
        },
        {
          "id": "addedGroup",
          "text": "Added to group: testgroup",
          "check_key": "in_testgroup"
        }
      ],
      "hints": [
        "First create the user with basic settings",
        "Use 'usermod' command to modify existing users",
        "Use -s for shell, -d for home, -c for comment",
        "Use -aG to ADD user to a supplementary group (don't remove from others)",
        "Create testgroup first before adding user to it"
      ],
      "solution_steps": [
        "sudo useradd -m testuser",
        "sudo groupadd testgroup",
        "sudo usermod -s /bin/zsh testuser",
        "sudo usermod -d /opt/testuser -m testuser",
        "sudo usermod -c \"Modified Test User\" testuser",
        "sudo usermod -aG testgroup testuser",
        "getent passwd testuser",
        "groups testuser"
      ],
      "validation_script": "validate_q4.sh",
      "cleanup_script": "userdel -r testuser 2>/dev/null; groupdel testgroup 2>/dev/null; rm -rf /opt/testuser 2>/dev/null; true",
      "order": 4
    },
    {
      "question_id": "Q5",
      "title": "Create User with Password Expiration",
      "category": "User Management",
      "difficulty": "hard",
      "difficulty_stars": "⭐⭐⭐",
      "points": 20,
      "time_limit": 1200,
      "description": "Create a temporary contractor account with password expiration policy for security compliance.",
      "requirements": [
        {
          "id": "username",
          "text": "Username: contractor",
          "check_key": "username"
        },
        {
          "id": "uid",
          "text": "UID: 5000",
          "check_key": "uid"
        },
        {
          "id": "expiry",
          "text": "Account expires: 2025-12-31",
          "check_key": "account_expiry"
        },
        {
          "id": "maxdays",
          "text": "Password max age: 30 days",
          "check_key": "max_days"
        },
        {
          "id": "warndays",
          "text": "Password warning: 7 days before expiry",
          "check_key": "warn_days"
        }
      ],
      "hints": [
        "Use 'chage' command to set password aging policies",
        "Use -E flag with useradd or chage for account expiration date",
        "Use -M for maximum password age",
        "Use -W for warning days",
        "Date format: YYYY-MM-DD"
      ],
      "solution_steps": [
        "sudo useradd -u 5000 -e 2025-12-31 contractor",
        "sudo chage -M 30 contractor",
        "sudo chage -W 7 contractor",
        "sudo chage -l contractor",
        "getent passwd contractor"
      ],
      "validation_script": "validate_q5.sh",
      "cleanup_script": "userdel -r contractor 2>/dev/null; true",
      "order": 5
    }
  ]
}
